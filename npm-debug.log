0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/6.2.2/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '--registry',
1 verbose cli   'https://registry.npmjs.org/' ]
2 info using npm@3.9.5
3 info using node@v6.2.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/yangjie/workspace/react-modalify',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/yangjie/.npm/react-modalify/2.0.1/package.tgz not in flight; packing
9 verbose correctMkdir /Users/yangjie/.npm correctMkdir not in flight; initializing
10 info lifecycle react-modalify@2.0.1~prepublish: react-modalify@2.0.1
11 verbose lifecycle react-modalify@2.0.1~prepublish: unsafe-perm in lifecycle true
12 verbose lifecycle react-modalify@2.0.1~prepublish: PATH: /usr/local/lib/node_modules/npm/bin/node-gyp-bin:/Users/yangjie/workspace/react-modalify/node_modules/.bin:/usr/local/Cellar/node/6.2.2/bin:/Users/yangjie/bin:/usr/local/bin:/Users/yangjie/workspace/gooo/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
13 verbose lifecycle react-modalify@2.0.1~prepublish: CWD: /Users/yangjie/workspace/react-modalify
14 silly lifecycle react-modalify@2.0.1~prepublish: Args: [ '-c', 'gulp build' ]
15 silly lifecycle react-modalify@2.0.1~prepublish: Returned: code: 0  signal: null
16 verbose tar pack [ '/Users/yangjie/.npm/react-modalify/2.0.1/package.tgz',
16 verbose tar pack   '/Users/yangjie/workspace/react-modalify' ]
17 verbose tarball /Users/yangjie/.npm/react-modalify/2.0.1/package.tgz
18 verbose folder /Users/yangjie/workspace/react-modalify
19 verbose addLocalTarball adding from inside cache /Users/yangjie/.npm/react-modalify/2.0.1/package.tgz
20 verbose correctMkdir /Users/yangjie/.npm correctMkdir not in flight; initializing
21 silly cache afterAdd react-modalify@2.0.1
22 verbose afterAdd /Users/yangjie/.npm/react-modalify/2.0.1/package/package.json not in flight; writing
23 verbose correctMkdir /Users/yangjie/.npm correctMkdir not in flight; initializing
24 verbose afterAdd /Users/yangjie/.npm/react-modalify/2.0.1/package/package.json written
25 silly publish { name: 'react-modalify',
25 silly publish   version: '2.0.1',
25 silly publish   description: 'Transform your plain react component into a Promise',
25 silly publish   main: 'lib/index.js',
25 silly publish   scripts: { prepublish: 'gulp build' },
25 silly publish   keywords: [ 'react', 'modal', 'dialog', 'promise' ],
25 silly publish   author: { name: 'hiyoungjay@gmail.com' },
25 silly publish   license: 'ISC',
25 silly publish   dependencies: {},
25 silly publish   homepage: 'https://github.com/youngjay/react-modalify',
25 silly publish   repository:
25 silly publish    { type: 'git',
25 silly publish      url: 'git+ssh://git@github.com/youngjay/react-modalify.git' },
25 silly publish   bugs: { url: 'https://github.com/youngjay/react-modalify/issues' },
25 silly publish   peerDependencies: { react: '*', 'react-dom': '*' },
25 silly publish   devDependencies:
25 silly publish    { 'babel-core': '^6.2.1',
25 silly publish      'babel-loader': '^6.2.0',
25 silly publish      'babel-preset-es2015': '^6.1.18',
25 silly publish      'babel-preset-react': '^6.1.18',
25 silly publish      'babel-preset-stage-0': '^6.1.18',
25 silly publish      gulp: '^3.9.0',
25 silly publish      'gulp-babel': '^6.1.1',
25 silly publish      webpack: '^1.12.10' },
25 silly publish   readme: '# react-modalify\n\nTransform your plain react component into a [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n\n## Install\n\n```shell\nnpm install react-modalify --save\n```\n\n## Usage\n\nWrite your plain react component with a ```close``` prop that ```react-modalify``` passed in. Call it when you want close this modal.\n\n```xml\nclass Notify extends Component {\n    render() {\n        return (\n            <div className="panel">\n                <h1>Hello, Modalify!</h1>\n                <div>\n                    <button onClick={this.props.close}>OK</button>\n                </div>\n            </div>\n        )\n    }\n}\n```\n\nModalify it\n\n```js\nimport {modalify} from \'react-modalify\'\n\nlet notify = modalify(Notify);\n```\n\nNow you can use it\n\n```js\nnotify()\n```\n\n## Features\n\n### [examples](http://youngjay.github.io/react-modalify/examples/examples.html)\n\n### Call modal() return a promise\n\n```xml\nclass Confirm extends Component {\n    render() {\n        return (\n            <div className="panel">\n                <h1>Hello, Modalify!</h1>\n                <div>\n                    <button onClick={() => {\n                        this.props.close(\'Yes\');\n                    }}>Yes</button>\n                    <button onClick={() => {\n                        this.props.close(\'No\');\n                    }}>No</button>\n                </div>\n            </div>\n        )\n    }\n}\n```\n\n```js\nlet confirm = modalify(Confirm);\nconfirm().then((returnValue) => {\n\tconsole.log(returnValue);\n});\n```\n\n### Pass props via modal(props)\n\n```xml\nclass ReceiveProps extends Component {\n    render() {\n        return (\n            <div className="panel">\n                <h1>{`Hello, ${this.props.user}!`}</h1>\n                <div>\n                    <button onClick={this.props.close}>OK</button>\n                </div>\n            </div>\n        )\n    }\n}\n```\n\n```js\nlet receiveProps = modalify(ReceiveProps);\nreceiveProps({\n\tuser: \'Tom\'\n})\n```\n\n### Nested modals support\n\n```react-modalify``` manage a stack of modals. So You can call modal() in another modal.\n\n## API\n\n### new ModalFactory(options[optional]: Object): ModalFactory\n\ncreate a ModalFactory with [options](https://github.com/youngjay/react-modalify/blob/master/src/ModalFactory.js#L10-L53)\n\n```js\nlet modalFactory = new ModalFactory({\n    overlayTransitionShowStyles: {\n        backgroundColor: \'rgba(96,125,139,0.5)\'        \n    }\n});\n```\n\n### modalFactory.create(component: ReactComponent, options[optional]: Object): Modal\n\ncreate a modal with a ReactComponent and [options](https://github.com/youngjay/react-modalify/blob/master/src/ModalFactory.js#L10-L53).\n\nThis options(if provided) will override the options in ModalFactory for current modal.\n\n```js\nlet notify = modalFactory.create(Notify, {\n    modalStyles: {\t\n        width: \'300px\',\n        backgroundColor: \'#ffeb38\'   \n\t}\n})\n```\n\n### modalify(options: Object): Modal\n\nShortcut for:\n\n```js\nexport const modalify = ::(new ModalFactory()).create;\n```\n\n### modal(props: Object): Promise\n\nOpen a modal with props, and return a Promise.\n\n```js\nnotify({\n\tuser: \'Tom\'\n}).then((returnValue) => {\n\tconsole.log(returnValue);\n})\n```\n\n## Notify the component to update when modal() was called\n\n```react-modalify``` will set component\'s ```props``` every time it was called.\n\nAccording to the [react lifecycle](http://facebook.github.io/react/docs/component-specs.html), the proper phases that you may put your code on are ```componentDidMount``` (for the first time) and ```componentWillReceiveProps```(for the later times)\n\n## Thoughts for Modals in react\n\n很多其它的react modal组件库，比如react-modal，react-portal。他们都是按照react的编程习惯。把modal组件也作为一个component放到使用的地方。这样会造成几个问题：\n\n1. 在没有用到modal的时候，这个组件也会被渲染。为了避免这个问题，有些开发者重写component的生命周期，使modal只有被open的时候才渲染，而且渲染在当前节点之外。\n1. 调用者要关心modal的位置。在列表中用到modal的话，则它会被重复渲染很多遍。\n1. modal的打开状态到底是由调用者控制，还是由modal自己控制？这个关系到这个状态是用props还是用state。很显然modal不能自己打开自己，所以一定是调用者用props传入。但是大部分modal的关闭都不是调用者控制的，所以又得在dialog里面写state。导致这个状态相当的混乱。\n1. 值的传递。大部分modal是需要返回结果给调用者的，使用component生成的组件传递返回值相当的麻烦，相当于子组件要修改父组件的值。\n\n以上几个原因导致现在modal组件都写的非常奇技淫巧。但是回归本质，modal就是一个异步调用，它能返回结果, 这个跟promise的时候场景很像，比如ajax。\n\n所以react-modalify反其道而行，把一个compoent转化成了一个promise调用。使用者并不关心modal应该渲染在哪里，modal的打开关闭状态应该怎么控制。只需要关心输入和输出即可。\n',
25 silly publish   readmeFilename: 'readme.md',
25 silly publish   gitHead: '093d01d0b6f3237c8c6d76844b14a3419ab8b6ee',
25 silly publish   _id: 'react-modalify@2.0.1',
25 silly publish   _shasum: '4f20a48a9ac4889087899c1cea18c182f41e7d32',
25 silly publish   _from: '.' }
26 verbose getPublishConfig undefined
27 silly mapToRegistry name react-modalify
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'react-modalify',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   name: 'react-modalify',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/react-modalify
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /Users/yangjie/.npm/react-modalify/2.0.1/package.tgz
34 verbose request uri https://registry.npmjs.org/react-modalify
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 5:34:12 PM
37 verbose request id 4778a4908bce00f1
38 http request PUT https://registry.npmjs.org/react-modalify
39 http 403 https://registry.npmjs.org/react-modalify
40 verbose headers { 'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=300',
40 verbose headers   'content-length': '95',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   date: 'Thu, 11 Aug 2016 09:34:09 GMT',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   connection: 'keep-alive',
40 verbose headers   'x-served-by': 'cache-hkg6821-HKG',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1470908047.778362,VS0,VE1633',
40 verbose headers   vary: 'Accept-Encoding' }
41 verbose request invalidating /Users/yangjie/.npm/registry.npmjs.org/react-modalify on PUT
42 error publish Failed PUT 403
43 verbose stack Error: "You cannot publish over the previously published version 2.0.1." : react-modalify
43 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
43 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
43 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
43 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
43 verbose stack     at emitTwo (events.js:106:13)
43 verbose stack     at Request.emit (events.js:191:7)
43 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
43 verbose stack     at emitOne (events.js:101:20)
43 verbose stack     at Request.emit (events.js:188:7)
43 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
44 verbose statusCode 403
45 verbose pkgid react-modalify
46 verbose cwd /Users/yangjie/workspace/react-modalify
47 error Darwin 15.6.0
48 error argv "/usr/local/Cellar/node/6.2.2/bin/node" "/usr/local/bin/npm" "publish" "--registry" "https://registry.npmjs.org/"
49 error node v6.2.2
50 error npm  v3.9.5
51 error code E403
52 error "You cannot publish over the previously published version 2.0.1." : react-modalify
53 error If you need help, you may report this error at:
53 error     <https://github.com/npm/npm/issues>
54 verbose exit [ 1, true ]
